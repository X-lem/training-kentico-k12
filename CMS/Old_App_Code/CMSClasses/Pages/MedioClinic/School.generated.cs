//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at http://docs.kentico.com.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine.Types.MedioClinic;
using CMS.DocumentEngine;

[assembly: RegisterDocumentType(School.CLASS_NAME, typeof(School))]

namespace CMS.DocumentEngine.Types.MedioClinic
{
	/// <summary>
	/// Represents a content item of type School.
	/// </summary>
	public partial class School : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "MedioClinic.School";


		/// <summary>
		/// The instance of the class that provides extended API for working with School fields.
		/// </summary>
		private readonly SchoolFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// SchoolID.
		/// </summary>
		[DatabaseIDField]
		public int SchoolID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("SchoolID"), 0);
			}
			set
			{
				SetValue("SchoolID", value);
			}
		}


		/// <summary>
		/// School Name.
		/// </summary>
		[DatabaseField]
		public string SchoolName
		{
			get
			{
				return ValidationHelper.GetString(GetValue("SchoolName"), @"");
			}
			set
			{
				SetValue("SchoolName", value);
			}
		}


		/// <summary>
		/// Street.
		/// </summary>
		[DatabaseField]
		public string Street
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Street"), @"");
			}
			set
			{
				SetValue("Street", value);
			}
		}


		/// <summary>
		/// City.
		/// </summary>
		[DatabaseField]
		public string City
		{
			get
			{
				return ValidationHelper.GetString(GetValue("City"), @"");
			}
			set
			{
				SetValue("City", value);
			}
		}


		/// <summary>
		/// State.
		/// </summary>
		[DatabaseField]
		public string State
		{
			get
			{
				return ValidationHelper.GetString(GetValue("State"), @"");
			}
			set
			{
				SetValue("State", value);
			}
		}


		/// <summary>
		/// Country.
		/// </summary>
		[DatabaseField]
		public string Country
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Country"), @"");
			}
			set
			{
				SetValue("Country", value);
			}
		}


		/// <summary>
		/// ZipCode.
		/// </summary>
		[DatabaseField]
		public string ZipCode
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ZipCode"), @"");
			}
			set
			{
				SetValue("ZipCode", value);
			}
		}


		/// <summary>
		/// PhoneNumber.
		/// </summary>
		[DatabaseField]
		public string PhoneNumber
		{
			get
			{
				return ValidationHelper.GetString(GetValue("PhoneNumber"), @"");
			}
			set
			{
				SetValue("PhoneNumber", value);
			}
		}


		/// <summary>
		/// Bio.
		/// </summary>
		[DatabaseField]
		public string Bio
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Bio"), @"");
			}
			set
			{
				SetValue("Bio", value);
			}
		}


		/// <summary>
		/// Photo.
		/// </summary>
		[DatabaseField]
		public Guid Photo
		{
			get
			{
				return ValidationHelper.GetGuid(GetValue("Photo"), Guid.Empty);
			}
			set
			{
				SetValue("Photo", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with School fields.
		/// </summary>
		[RegisterProperty]
		public SchoolFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with School fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class SchoolFields : AbstractHierarchicalObject<SchoolFields>
		{
			/// <summary>
			/// The content item of type School that is a target of the extended API.
			/// </summary>
			private readonly School mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="SchoolFields" /> class with the specified content item of type School.
			/// </summary>
			/// <param name="instance">The content item of type School that is a target of the extended API.</param>
			public SchoolFields(School instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// SchoolID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.SchoolID;
				}
				set
				{
					mInstance.SchoolID = value;
				}
			}


			/// <summary>
			/// School Name.
			/// </summary>
			public string Name
			{
				get
				{
					return mInstance.SchoolName;
				}
				set
				{
					mInstance.SchoolName = value;
				}
			}


			/// <summary>
			/// Street.
			/// </summary>
			public string Street
			{
				get
				{
					return mInstance.Street;
				}
				set
				{
					mInstance.Street = value;
				}
			}


			/// <summary>
			/// City.
			/// </summary>
			public string City
			{
				get
				{
					return mInstance.City;
				}
				set
				{
					mInstance.City = value;
				}
			}


			/// <summary>
			/// State.
			/// </summary>
			public string State
			{
				get
				{
					return mInstance.State;
				}
				set
				{
					mInstance.State = value;
				}
			}


			/// <summary>
			/// Country.
			/// </summary>
			public string Country
			{
				get
				{
					return mInstance.Country;
				}
				set
				{
					mInstance.Country = value;
				}
			}


			/// <summary>
			/// ZipCode.
			/// </summary>
			public string ZipCode
			{
				get
				{
					return mInstance.ZipCode;
				}
				set
				{
					mInstance.ZipCode = value;
				}
			}


			/// <summary>
			/// PhoneNumber.
			/// </summary>
			public string PhoneNumber
			{
				get
				{
					return mInstance.PhoneNumber;
				}
				set
				{
					mInstance.PhoneNumber = value;
				}
			}


			/// <summary>
			/// Bio.
			/// </summary>
			public string Bio
			{
				get
				{
					return mInstance.Bio;
				}
				set
				{
					mInstance.Bio = value;
				}
			}


			/// <summary>
			/// Photo.
			/// </summary>
			public DocumentAttachment Photo
			{
				get
				{
					return mInstance.GetFieldDocumentAttachment("Photo");
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="School" /> class.
		/// </summary>
		public School() : base(CLASS_NAME)
		{
			mFields = new SchoolFields(this);
		}

		#endregion
	}
}