@using CMS.Search;
@using CMS.DocumentEngine;
@using MedioClinic.Models.SearchResult;
@using CMS.DataEngine;
@using CMS.Helpers;

@model MedioClinic.Models.PageViewModel<SearchResultModel>

@if (!Model.Data.SearchResultPages.Any())
{
    if (!String.IsNullOrWhiteSpace(Model.Data.Query))
    {
        <div class="container">
            <h3>No results found for <i>@Model.Data.Query</i></h3>
        </div>
    }
}
else
{
    <div class="container">
        <h3>Results for <i>@Model.Data.Query</i></h3>
        <div class="row">
            @foreach (var node in Model.Data.SearchResultPages)
            {
                string url = DocumentURLProvider.GetAbsoluteLiveSiteURL(node).ToLower();
                if (url != ResHelper.GetString("RootDocument.AbsoluteURL"))
                {
                <div class="card">
                    <div class="card-content">
                        @switch (node.GetStringValue("ClassName", string.Empty))
                        {
                            case "MedioClinic.Doctor":
                                @PrintDoctor(node);
                                break;
                            case "MedioClinic.School":
                                @PrintSchool(node);
                                break;
                            case "MedioClinic.Article":
                                @PrintArticle(node);
                                break;
                            default:
                                @PrintDefault(node);
                                break;
                        }
                    </div>
                </div>
                }
            }
        </div>
    </div>
}


@helper PrintDoctor(TreeNode node)
{
    <strong>Doctor: <a href="@DocumentURLProvider.GetAbsoluteLiveSiteURL(node).ToLower()">@node.GetStringValue("FirstName", string.Empty) @node.GetStringValue("LastName", string.Empty)</a></strong>
    <p>@Html.Raw(node.GetStringValue("Bio", string.Empty))</p>
}

@helper PrintSchool(TreeNode node)
{
    <strong>School: <a href="@DocumentURLProvider.GetAbsoluteLiveSiteURL(node).ToLower()">@node.GetStringValue("SchoolName", string.Empty)</a></strong>
    <p>@Html.Raw(node.GetStringValue("Bio", string.Empty))</p>
}

@helper PrintArticle(TreeNode node)
{
    DateTime articleDate = DateTime.Parse(node.GetStringValue("DatePublished", string.Empty));
    
    <strong>Article: <a href="@DocumentURLProvider.GetAbsoluteLiveSiteURL(node).ToLower()">@node.GetStringValue("Title", string.Empty)</a></strong>
    <p><i>@articleDate.ToString("d")</i></p>
    <p>@node.GetStringValue("Summary", string.Empty)</p>
}

@helper PrintDefault(TreeNode node)
{
    <strong><a href="@DocumentURLProvider.GetAbsoluteLiveSiteURL(node).ToLower()">@node.GetStringValue("NodeName", string.Empty)</a></strong>
}